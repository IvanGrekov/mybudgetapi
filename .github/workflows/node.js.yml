name: mybudgetapi CI

on:
  push:
    branches: [ "master" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [20.12.2]

    steps:
    - name: Check out the repository
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Create .env file
      run: |
        touch .env
        echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
        echo PORT=${{ secrets.PORT }} >> .env
        echo DB_HOST=${{ secrets.DB_HOST }} >> .env
        echo DB_NAME=${{ secrets.DB_NAME }} >> .env
        echo DB_IMAGE_NAME=${{ secrets.DB_IMAGE_NAME }} >> .env
        echo DB_CONTAINER_PORT=${{ secrets.DB_CONTAINER_PORT }} >> .env
        echo DB_USER=${{ secrets.DB_USER }} >> .env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
        echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
        echo JWT_TOKEN_AUDIENCE=${{ secrets.JWT_TOKEN_AUDIENCE }} >> .env
        echo JWT_TOKEN_ISSUER=${{ secrets.JWT_TOKEN_ISSUER }} >> .env
        echo JWT_ACCESS_TOKEN_TTL=${{ secrets.JWT_ACCESS_TOKEN_TTL }} >> .env
        echo JWT_REFRESH_TOKEN_TTL=${{ secrets.JWT_REFRESH_TOKEN_TTL }} >> .env
        echo JWT_RESET_PASSWORD_TTL=${{ secrets.JWT_RESET_PASSWORD_TTL }} >> .env
        echo REDIS_HOST=${{ secrets.REDIS_HOST }} >> .env
        echo REDIS_IMAGE_NAME=${{ secrets.REDIS_IMAGE_NAME }} >> .env
        echo REDIS_CONTAINER_PORT=${{ secrets.REDIS_CONTAINER_PORT }} >> .env
        echo AUTH_CLIENT_SECRET=${{ secrets.AUTH_CLIENT_SECRET }} >> .env
        echo AUTH_CLIENT_ID=${{ secrets.AUTH_CLIENT_ID }} >> .env
        echo TFA_APP_NAME=${{ secrets.TFA_APP_NAME }} >> .env
        echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env
        echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env
        echo EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }} >> .env
        echo EMAIL_SENDER_DOMAIN=${{ secrets.EMAIL_SENDER_DOMAIN }} >> .env
        echo EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }} >> .env

    - name: Build and deploy
      run: docker-compose up -d --build

    - name: Docker network connect app
      run: docker network connect --ip 172.18.0.3 multi-host-network mybudgetapi_api_1
